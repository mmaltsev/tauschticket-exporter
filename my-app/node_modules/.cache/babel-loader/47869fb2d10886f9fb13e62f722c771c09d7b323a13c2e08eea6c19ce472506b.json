{"ast":null,"code":"var _jsxFileName = \"/Users/vladios/git/tauschticket_project/tauschticket-exporter/my-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@mui/material/Button\";\nimport Textarea from \"@mui/joy/Textarea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area-textfield\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"area-textfield__input\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"area-textfield__input-form\",\n            onSubmit: event => {\n              event.preventDefault();\n              const input = event.target[0].value;\n              // console.log(input, typeof input);\n\n              //Function for verifying a HTML link\n              const checkingHTMLRegex = function (input) {\n                const regExTauschticket = /<title>Tauschticket: Homepage/;\n                // console.log(regExTauschticket.test(input));\n                const regEx = /<[a-z]+\\d?(\\s+[\\w-]+=(\"[^\"]*\"|'[^']*'))*\\s*\\/?>|&#?\\w+;/i;\n                if (regEx.test(input) && regExTauschticket.test(input)) {\n                  console.log(input);\n                }\n                if (regEx.test(input) && !regExTauschticket.test(input)) {\n                  alert(\"Your HTML is not from Tauschticket Projekt\");\n                }\n                if (!regEx.test(input)) {\n                  alert(\"Your input is not HTML\");\n                }\n              };\n              checkingHTMLRegex(input);\n\n              ////////////////////////////////////////////\n              //////Parsing an inserted HTML////////////\n              ////////////////////////////////////////////\n\n              /////Manual saving of Data for 1 Book/////\n              const parser = new DOMParser();\n              const parsedDocument = parser.parseFromString(input, \"text/html\");\n              console.log(`Here is parsed HTML:`, parsedDocument);\n\n              //Book Title\n              const bookTitle = parsedDocument.getElementsByClassName(\"category_item_link2\")[0].innerText;\n              console.log(bookTitle);\n              //Author name (already plitted in Array)\n\n              const bookAuthor = parsedDocument.getElementsByClassName(\"category_item_text\")[0].textContent.split(`,`);\n              console.log(bookAuthor);\n\n              //Publish Date & Comment//\n\n              const bookDateArray = parsedDocument.getElementsByClassName(\"category_item_text\")[1].textContent.split(` `);\n              //getting braces off\n              const regexStringDate = /\\(([^()]*)\\)/g;\n              bookDateArray[1] = [...bookDateArray[1].matchAll(regexStringDate)].flat()[1];\n              //Comment and Publish Date Strings//\n              const bookComment = bookDateArray[0];\n              const bookDate = bookDateArray[1];\n              // console.log(bookDateArray);\n              // console.log(bookComment, bookDate);\n\n              //Describtion//\n\n              const bookDescribtion = parsedDocument.getElementsByClassName(\"category_item_comment_3\")[0].textContent;\n              console.log(bookDescribtion);\n\n              //Image & ISBN//\n              const regexbookImage = /<img[^>]*src=\"([^\"]+)\"[^>]*>/g;\n              const bookImageArray = parsedDocument.getElementsByClassName(\"category_item_pic3\")[0].innerHTML;\n              const bookImageSrcAtr = [...bookImageArray.matchAll(regexbookImage)].flat()[1];\n              const bookSrc = `https:` + bookImageSrcAtr;\n\n              //ISBN\n              const regexISBN = /([0-9]{13}(?![0-9]))/g;\n              const checkISBN = [...bookSrc.matchAll(regexISBN)].flat();\n              console.log(\"Look Hereee\", checkISBN);\n              //price//\n              const bookPrice = parsedDocument.getElementsByClassName(\"category_item_tickets\")[0].innerText;\n              console.log(bookPrice);\n            },\n            children: [/*#__PURE__*/_jsxDEV(Textarea, {\n              placeholder: \"Paste your copied HTML code to parse it!\",\n              required: true,\n              sx: {\n                mb: 1\n              },\n              maxRows: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Start Parcing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Button","Textarea","jsxDEV","_jsxDEV","App","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","onSubmit","event","preventDefault","input","value","checkingHTMLRegex","regExTauschticket","regEx","test","console","log","alert","parser","DOMParser","parsedDocument","parseFromString","bookTitle","getElementsByClassName","innerText","bookAuthor","textContent","split","bookDateArray","regexStringDate","matchAll","flat","bookComment","bookDate","bookDescribtion","regexbookImage","bookImageArray","innerHTML","bookImageSrcAtr","bookSrc","regexISBN","checkISBN","bookPrice","placeholder","required","sx","mb","maxRows","type","_c","$RefreshReg$"],"sources":["/Users/vladios/git/tauschticket_project/tauschticket-exporter/my-app/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@mui/material/Button\";\n\nimport Textarea from \"@mui/joy/Textarea\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {/* <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p> */}\n\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <div className=\"area-textfield\">\n          {/* <div className=\"area-textfield__buttton\">\n            <Button variant=\"outlined\" disableElevation>\n              Start parcing\n            </Button>\n          </div> */}\n          <div className=\"area-textfield__input\">\n            <form\n              className=\"area-textfield__input-form\"\n              onSubmit={(event) => {\n                event.preventDefault();\n                const input = event.target[0].value;\n                // console.log(input, typeof input);\n\n                //Function for verifying a HTML link\n                const checkingHTMLRegex = function (input) {\n                  const regExTauschticket = /<title>Tauschticket: Homepage/;\n                  // console.log(regExTauschticket.test(input));\n                  const regEx =\n                    /<[a-z]+\\d?(\\s+[\\w-]+=(\"[^\"]*\"|'[^']*'))*\\s*\\/?>|&#?\\w+;/i;\n\n                  if (regEx.test(input) && regExTauschticket.test(input)) {\n                    console.log(input);\n                  }\n                  if (regEx.test(input) && !regExTauschticket.test(input)) {\n                    alert(\"Your HTML is not from Tauschticket Projekt\");\n                  }\n                  if (!regEx.test(input)) {\n                    alert(\"Your input is not HTML\");\n                  }\n                };\n                checkingHTMLRegex(input);\n\n                ////////////////////////////////////////////\n                //////Parsing an inserted HTML////////////\n                ////////////////////////////////////////////\n\n                /////Manual saving of Data for 1 Book/////\n                const parser = new DOMParser();\n                const parsedDocument = parser.parseFromString(\n                  input,\n                  \"text/html\"\n                );\n                console.log(`Here is parsed HTML:`, parsedDocument);\n\n                //Book Title\n                const bookTitle = parsedDocument.getElementsByClassName(\n                  \"category_item_link2\"\n                )[0].innerText;\n                console.log(bookTitle);\n                //Author name (already plitted in Array)\n\n                const bookAuthor = parsedDocument\n                  .getElementsByClassName(\"category_item_text\")[0]\n                  .textContent.split(`,`);\n                console.log(bookAuthor);\n\n                //Publish Date & Comment//\n\n                const bookDateArray = parsedDocument\n                  .getElementsByClassName(\"category_item_text\")[1]\n                  .textContent.split(` `);\n                //getting braces off\n                const regexStringDate = /\\(([^()]*)\\)/g;\n                bookDateArray[1] = [\n                  ...bookDateArray[1].matchAll(regexStringDate),\n                ].flat()[1];\n                //Comment and Publish Date Strings//\n                const bookComment = bookDateArray[0];\n                const bookDate = bookDateArray[1];\n                // console.log(bookDateArray);\n                // console.log(bookComment, bookDate);\n\n                //Describtion//\n\n                const bookDescribtion = parsedDocument.getElementsByClassName(\n                  \"category_item_comment_3\"\n                )[0].textContent;\n                console.log(bookDescribtion);\n\n                //Image & ISBN//\n                const regexbookImage = /<img[^>]*src=\"([^\"]+)\"[^>]*>/g;\n                const bookImageArray =\n                  parsedDocument.getElementsByClassName(\"category_item_pic3\")[0]\n                    .innerHTML;\n                const bookImageSrcAtr = [\n                  ...bookImageArray.matchAll(regexbookImage),\n                ].flat()[1];\n                const bookSrc = `https:` + bookImageSrcAtr;\n\n                //ISBN\n                const regexISBN = /([0-9]{13}(?![0-9]))/g;\n                const checkISBN = [...bookSrc.matchAll(regexISBN)].flat();\n                console.log(\"Look Hereee\", checkISBN);\n                //price//\n                const bookPrice = parsedDocument.getElementsByClassName(\n                  \"category_item_tickets\"\n                )[0].innerText;\n                console.log(bookPrice);\n              }}\n            >\n              <Textarea\n                placeholder=\"Paste your copied HTML code to parse it!\"\n                required\n                sx={{ mb: 1 }}\n                maxRows={16}\n              />\n\n              <Button type=\"submit\">Start Parcing</Button>\n            </form>\n            {/* <Textarea\n              minRows={2}\n              size=\"lg\"\n              variant=\"outlined\"\n              placeholder=\"Enter copied Data\"\n            /> */}\n          </div>\n        </div>\n\n        {/* <p>And now</p> */}\n      </header>\n      {/* <body>\n        <Button variant=\"outlined\" disableElevation>\n          Hello World\n        </Button>\n      </body> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}