Notes to Tutorial REACT : 

1.  front-end JavaScript library for creating UI component-based user interfaces.
2. React for its simplicity, flexibility, performance, usability, virtual DOM, components, and many other features.
3. straightforward and modular infrastructure
4.React is a JavaScript framework, it is critical to understand certain JavaScript fundamentals in order to flow and understand React.
5. npm create-react-app - Xommand for creating ready to use React App

Structure of Application(Architecture):

6.node_modules folder - Dependencies
7.public folder - contains some static files, such as the HTML file
8.The only code to remember is the div with the id root where the entire React application will be placed.
9.src folder - is where development takes place
10.React elements are immutable.!

11. 
  App.js - all of your components   will eventually meet 

   index.js - where you target the root id from the index.html file and render the App.js file
  
    App.css and index.css - These both contain styles for your application.
12.JSX - JavaScript Extension Syntax used in React to easily write HTML and JavaScript together
13.create-react-app internally uses Babel for the JSX to JavaScript conversion

Example of Code in React with JSX: 
-const App = () => {
  return (
    <div>
      <h1>JSX Title</h1>
      <p>This is first JSX Element!</p>
      <p>This is another JSX Element</p>
    </div>
  );
};

14. React is a Library, Angular/View are Frameworks
15. Good for creating dynamic UI Interfaces
16.sudo npm i -g vercel - VERCEL INSTALLING


Fifma/Wireframe
17. A wireframe is a simple visual guide that represents the skeletal framework of a website or digital product.
18. Low/High fidelity Wireframe
19. Things to remember(for creating Wireframe): 
    Supported devices
    Screen orientation
    Context of use
20. Usecases for Wireframe:
    Get stakeholders to focus
    Catch problems early
    Cut down on revision time
    Decide content prioritization
    Test usability with users

Testing:
21. Both Jest and React Testing Library come pre-packaged with Create React App.
  21.1 React Testing Library provides test helpers for structuring tests around user interactions
  21.2 Jest is used as the test runner
assertion-утверждение
22.
  22.1 getBy* (most commonly used)
  22.2 queryBy* (used when testing the   absence of an element without throwing an error)
  22.3 findBy* (used when testing asynchronous code)
absence-отсутствие

MVP
Main Goals: 
  1.Release a product to the market as quickly as possible
    2.Test an idea with real users before committing a large budget to the product’s full development
      3.Learn what resonates with the company’s target market and what doesn’t
23. MVP (minimum viable product)- product with enough features to attract early-adopter customers and validate a product idea early in the product development cycle
24. Because the **agile** methodology is built on validating and iterating products based on user input, the MVP plays a central role in **agile** development.
25. Collect the maximum amount of validated learning about customers with the least amount of effort.

MVP 2: 
Main Goal: The second phase - develop the parser itself.

24. parse - to divide (a sentence) into grammatical parts and identify the parts and their relations to each other.
 
25. useState - Hoocks:
    1. Only in function components
    2. Always execution in same order
    3. To have render useState fct. only ones -> define use state as a function
26. DONT USE (vw/vh) with (fr-units)


React Basics: 
A Component's Memory
  (useState)
  The useState Hook provides those two things:

    A state variable to retain the data between renders.
    A state setter function to update the variable and trigger React to render the component again.

VERY good tip how to render Elements, only when needed: 
  {downloading && <CircularIndeterminate />} - [downloading,setDownloading]. In this case, u can control when <CircularIndeterminate /> should be rendered.